
import random

"""
Task 1
Ask the user for an input
Output the ASCII values for each character of the input
Output the sum of the ASCII values for each character of the input
"""


def change_to_aschii():
    user_input = input("Please enter any words: ")
    sum = 0
    for el in user_input:
        print(f"{el} conver to {ord(el)} in ASCHII");
        sum += ord(el)
    print(f"Total sum of the ASCHII value is {sum}")


"""
Task 2
Ask the user for a number
Determine if number is a digit
If so, output the character that ASCII value represents
If not, output an error message
"""


def check_input_number():
    user_input = input("Please enter number: ")
    if user_input.isdigit():
        print(f"ASCHII code is : {list(map(lambda el: ord(el), user_input))}")
    else:
        print("Error, please enter only digits")


"""
Task 3
Ask the user for an input
Determine if the input is a valid title
If so, output a success message
If not, transform the input into a title and output it
"""


def check_title_valid():
    user_input = input("Enter valid title: ")
    if user_input.istitle():
        print("Success, yon entered valid title")
    else:
        print(f"Sorry, you supposed to enter {user_input.title()}")


"""
Task 4
Ask user for input
Ask user for character
Output a YES or NO value if the character is found in the input
Output a position of where the character is found
"""


def ask_character():
    user_input = input("Please enter character: ")
    if any(char.isalnum() for char in user_input):
        print("YES")
        for el in user_input:
            if el.isalnum():
                print(f"{el} is at {user_input.index(el)}")
    else:
        print("NO")


"""
Task 5
Create a dictionary of 3 items
GET one of the keys
Remove one of the keys
output all values of the dictionary
output all keys of the dictionary
output all key-value pairs of the dictionary
"""


def del_rand_dict_key():
    my_dictionary = {"brand": "Ford", "model": "Mustang", "year": 1964}

    rand_key = random.choice(list(my_dictionary))
    del my_dictionary[rand_key]

    print(my_dictionary.values())
    print(my_dictionary.keys())
    print(my_dictionary.items())


"""
Task 6
Create a set of numbers between 10 and 20
Create another set of numbers between 5 and 15
Output to screen the values that are not in both sets
Output to screen values that are in the first set but not in the second set
Output to screen values that are in the second set but not in the first set
Output to screen the common numbers of the two sets
Iterate through each value of both sets
"""


def display_sets():
    s1 = {10, 11, 12, 13, 14, 17, 18, 19}
    s2 = {5, 6, 7, 10, 11, 13}
    print(f"Values that are not in both sets: {set(range(5, 21))-(s1|s2)}")
    print(f"Values that are in the first set but not in the second set: {s1-s2}")
    print(f"values that are in the second set but not in the first set: {s2-s1}")
    print(f"the common numbers of the two sets: {s1&s2}")
    # Iterating using for loop
    for val in s1 | s2:
        print(val)


"""
Task 7
Ask the user for input
Using list comprehension, create a list of all non-alphanumeric characters
Output the list in reverse order 
"""

def create_non_alpha_list():
    user_input = input("Please enter the words: ")
    non_alphnumeric = [x for x in user_input if not x.isalnum()]
    non_alphnumeric.reverse()
    print(f"A reverse order of non-alphanumeric characters is {non_alphnumeric}")


"""
Task 8
Create a dictionary of the following data using dictionary comprehension
B	:	44
H	:	48
N	:	52
T	:	56
Z	:	60	
"""
def create_list_with_dict_comprehension():
    my_keys = ["B", "H", "N", "T", "Z"]
    my_valus = [44, 48, 52, 56, 60]
    my_dictionary = {key: value for key, value in zip(my_keys, my_valus)}
    print(my_dictionary)


"""
Task 9
You are a store own

Create a dictionary of your inventory
    The inventory should have 3 categories
        Each category should have 2 items

You need to select a vendor

Create a dictionary of the vendor's inventory
    The inventory should have 3 categories
        Each category should have 2 items

Output the items that YOU have but the VENDOR does not have

Output the items that BOTH YOU and the VENDOR have

Ask the user for an item

Determine if the item is in STOCK (you have it)
Determine if vendor carries the item (vendor has it)
"""
def check_inventory():
    my_inventory = {"beverages": ["water", "juice"], "fruits": ["apple", "banana"], "dairy": ["eggs", "milk"]}
    vendor_inventory = {"beverages": ["water", "juice"], "vegetables": ["lettuce", "onions"], "dairy": ["eggs", "cheese"]}
    my_set = {x for temp in my_inventory.values() for x in temp}
    vendor_set = {x for temp in vendor_inventory.values() for x in temp}
    print(f"Items that I have but not vendor: {my_set-vendor_set}")
    print(f"Items that both vendor and I have: {vendor_set&my_set}")
    user_input = input("Please enter the item: ")
    if user_input in my_set:
        print(f"You already have the {user_input} in your inventory")
    elif user_input in vendor_set:
        print(f"Vendor has the {user_input}. Please contact to the vendor")
    else:
        print(f"Sorry, {user_input} is not available temporary.")


# change_to_aschii()
# check_input_number()
# check_title_valid()
# ask_character()
# del_rand_dict_key()
# display_sets()
# create_non_alpha_list()
# create_list_with_dict_comprehension()
# check_inventory()


